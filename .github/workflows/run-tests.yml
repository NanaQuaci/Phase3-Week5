name: Run Android Appium Tests with Allure

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  APP_PATH: ./src/test/resources/apps/Android.SauceLabs.Mobile.Sample.app.2.7.1.apk
  DEVICE_NAME: pixel_6a

jobs:
  test:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: temurin

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Appium and Allure
        run: |
          npm install -g appium@2.0.0 appium-doctor allure-commandline --save-dev
          appium driver install uiautomator2

      - name: Start Android Emulator and Run Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          force-avd-creation: true
          emulator-options: -no-snapshot -noaudio -no-boot-anim -camera-back none -camera-front none -no-window
          disable-animations: true
          emulator-boot-timeout: 900
          script: |
            echo ">>> Starting Appium server..."
            appium -p 4723 --base-path /wd/hub &
            
            # Wait for Appium to be ready
            echo ">>> Waiting for Appium server..."
            timeout=30
            while ! nc -z localhost 4723; do
              echo "Appium not ready yet..."
              sleep 1
              ((timeout--))
              if [ $timeout -le 0 ]; then
                echo "Appium did not start!"
                exit 1
              fi
            done
            echo ">>> Appium is ready, running Maven tests..."
            
            mkdir -p allure-results target/surefire-reports
            mvn clean test -Dsurefire.suiteXmlFiles=testng.xml

      - name: Upload Allure results as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results

      - name: Upload JUnit reports as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-reports
          path: target/surefire-reports

  deploy-allure-report:
    needs: test
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Allure results
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: allure-results

      - name: Install Allure CLI
        run: |
          wget https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.tgz
          tar -xzf allure-2.27.0.tgz
          sudo mv allure-2.27.0 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/local/bin/allure

      - name: Generate Allure report
        run: |
          allure generate allure-results --clean -o allure-report

      - name: Deploy Allure report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: allure-report
          publish_branch: gh-pages

  notify-slack:
    needs: [ test, deploy-allure-report ]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Send Slack notification
        run: |
          STATUS="${{ needs.test.result }}"
          EMOJI="❌"
          if [ "$STATUS" = "success" ]; then
            EMOJI="✅"
          fi
          curl -X POST -H 'Content-type: application/json' --data "{
            \"text\": \"${EMOJI} Android Appium CI/CD finished with status: *$STATUS*\nRepo: $GITHUB_REPOSITORY\nCommit: <https://github.com/$GITHUB_REPOSITORY/commit/$GITHUB_SHA|$GITHUB_SHA>\nAllure Report: https://$GITHUB_REPOSITORY_OWNER.github.io/${{ github.event.repository.name }}\" 
          }" ${{ secrets.SLACK_WEBHOOK_URL }}
